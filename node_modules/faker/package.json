{
  "_from": "faker",
  "_id": "faker@4.1.0",
  "_inBundle": false,
  "_integrity": "sha1-HkW7vsxndLPBlfrSg1EJxtdIzD8=",
  "_location": "/faker",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "faker",
    "fetchSpec": "latest",
    "name": "faker",
    "raw": "faker",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/faker/-/faker-4.1.0.tgz",
  "_shasum": "1e45bbbecc6774b3c195fad2835109c6d748cc3f",
  "_shrinkwrap": null,
  "_spec": "faker",
  "_where": "C:\\Users\\vatsa\\Desktop\\My Stuff\\Coding Projects\\my_website\\udemy_web_app",
  "bugs": {
    "url": "https://github.com/Marak/Faker.js/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Marak Squires",
      "email": "marak.squires@gmail.com"
    }
  ],
  "dependencies": {},
  "deprecated": false,
  "description": "Generate massive amounts of fake contextual data",
  "devDependencies": {
    "browserify": "5.11.1",
    "gulp": "^3.9.1",
    "gulp-gh-pages": "^0.5.4",
    "gulp-jsdoc3": "^0.2.1",
    "gulp-mustache": "0.4.0",
    "gulp-rename": "1.2.0",
    "gulp-uglify": "1.0.1",
    "ink-docstrap": "1.1.4",
    "jsdoc": "^3.4.0",
    "jshint": "0.9.0",
    "lodash": "^4.6.1",
    "mocha": "^3.2.0",
    "node-minify": "*",
    "optimist": "0.3.5",
    "sinon": "1.4.2",
    "through2": "2.0.0",
    "vinyl-transform": "0.0.1"
  },
  "homepage": "https://github.com/Marak/Faker.js#readme",
  "license": "MIT",
  "main": "index.js",
  "name": "faker",
  "optionalDependencies": {},
  "readme": "# faker.js - generate massive amounts of fake data in the browser and node.js\n\n![Faker.js](http://imgur.com/KiinQ.png)\n\n[![Build Status](https://travis-ci.org/Marak/faker.js.svg?branch=master)](https://travis-ci.org/Marak/faker.js)\n\n[![npm version](https://badge.fury.io/js/faker.svg)](http://badge.fury.io/js/faker)\n\n## Demo\n\n[https://cdn.rawgit.com/Marak/faker.js/master/examples/browser/index.html](https://cdn.rawgit.com/Marak/faker.js/master/examples/browser/index.html)\n\n## Hosted API Microservice\n\n[http://faker.hook.io](http://faker.hook.io/)\n - Supports all Faker API Methods\n - Full-Featured Microservice\n - Hosted by [hook.io](http://hook.io)\n\n```bash\ncurl http://faker.hook.io?property=name.findName&locale=de\n```\n\n## Usage\n\n### Browser\n\n    <script src = \"faker.js\" type = \"text/javascript\"></script>\n    <script>\n      var randomName = faker.name.findName(); // Caitlyn Kerluke\n      var randomEmail = faker.internet.email(); // Rusty@arne.info\n      var randomCard = faker.helpers.createCard(); // random contact card containing many properties\n    </script>\n\n### Node.js\n\n    var faker = require('faker');\n\n    var randomName = faker.name.findName(); // Rowan Nikolaus\n    var randomEmail = faker.internet.email(); // Kassandra.Haley@erich.biz\n    var randomCard = faker.helpers.createCard(); // random contact card containing many properties\n\n## API\n\n\n### Faker.fake()\n\nfaker.js contains a super useful generator method `Faker.fake` for combining faker API methods using a mustache string format.\n\n**Example:**\n\n``` js\nconsole.log(faker.fake(\"{{name.lastName}}, {{name.firstName}} {{name.suffix}}\"));\n// outputs: \"Marks, Dean Sr.\"\n```\n\nThis will interpolate the format string with the value of methods `name.lastName()`, `name.firstName()`, and `name.suffix()`\n\n### JSDoc API Browser\n\n[http://marak.github.io/faker.js/](http://marak.github.io/faker.js/)\n\n### API Methods\n\n* address\n  * zipCode\n  * city\n  * cityPrefix\n  * citySuffix\n  * streetName\n  * streetAddress\n  * streetSuffix\n  * streetPrefix\n  * secondaryAddress\n  * county\n  * country\n  * countryCode\n  * state\n  * stateAbbr\n  * latitude\n  * longitude\n* commerce\n  * color\n  * department\n  * productName\n  * price\n  * productAdjective\n  * productMaterial\n  * product\n* company\n  * suffixes\n  * companyName\n  * companySuffix\n  * catchPhrase\n  * bs\n  * catchPhraseAdjective\n  * catchPhraseDescriptor\n  * catchPhraseNoun\n  * bsAdjective\n  * bsBuzz\n  * bsNoun\n* database\n  * column\n  * type\n  * collation\n  * engine\n* date\n  * past\n  * future\n  * between\n  * recent\n  * month\n  * weekday\n* fake\n* finance\n  * account\n  * accountName\n  * mask\n  * amount\n  * transactionType\n  * currencyCode\n  * currencyName\n  * currencySymbol\n  * bitcoinAddress\n  * iban\n  * bic\n* hacker\n  * abbreviation\n  * adjective\n  * noun\n  * verb\n  * ingverb\n  * phrase\n* helpers\n  * randomize\n  * slugify\n  * replaceSymbolWithNumber\n  * replaceSymbols\n  * shuffle\n  * mustache\n  * createCard\n  * contextualCard\n  * userCard\n  * createTransaction\n* image\n  * image\n  * avatar\n  * imageUrl\n  * abstract\n  * animals\n  * business\n  * cats\n  * city\n  * food\n  * nightlife\n  * fashion\n  * people\n  * nature\n  * sports\n  * technics\n  * transport\n  * dataUri\n* internet\n  * avatar\n  * email\n  * exampleEmail\n  * userName\n  * protocol\n  * url\n  * domainName\n  * domainSuffix\n  * domainWord\n  * ip\n  * ipv6\n  * userAgent\n  * color\n  * mac\n  * password\n* lorem\n  * word\n  * words\n  * sentence\n  * slug\n  * sentences\n  * paragraph\n  * paragraphs\n  * text\n  * lines\n* name\n  * firstName\n  * lastName\n  * findName\n  * jobTitle\n  * prefix\n  * suffix\n  * title\n  * jobDescriptor\n  * jobArea\n  * jobType\n* phone\n  * phoneNumber\n  * phoneNumberFormat\n  * phoneFormats\n* random\n  * number\n  * arrayElement\n  * objectElement\n  * uuid\n  * boolean\n  * word\n  * words\n  * image\n  * locale\n  * alphaNumeric\n* system\n  * fileName\n  * commonFileName\n  * mimeType\n  * commonFileType\n  * commonFileExt\n  * fileType\n  * fileExt\n  * directoryPath\n  * filePath\n  * semver\n\n\n## Localization\n\nAs of version `v2.0.0` faker.js has support for multiple localities.\n\nThe default language locale is set to English.\n\nSetting a new locale is simple:\n\n```js\n// sets locale to de\nfaker.locale = \"de\";\n```\n\n * az\n * cz\n * de\n * de_AT\n * de_CH\n * en\n * en_AU\n * en_BORK\n * en_CA\n * en_GB\n * en_IE\n * en_IND\n * en_US\n * en_au_ocker\n * es\n * es_MX\n * fa\n * fr\n * fr_CA\n * ge\n * id_ID\n * it\n * ja\n * ko\n * nb_NO\n * nep\n * nl\n * pl\n * pt_BR\n * ru\n * sk\n * sv\n * tr\n * uk\n * vi\n * zh_CN\n * zh_TW\n\n\n### Individual Localization Packages\n\nAs of vesion `v3.0.0` faker.js supports incremental loading of locales. \n\nBy default, requiring `faker` will include *all* locale data.\n\nIn a production environment, you may only want to include the locale data for a specific set of locales.\n\n```js\n// loads only de locale\nvar faker = require('faker/locale/de');\n```\n\n## Setting a randomness seed\n\nIf you want consistent results, you can set your own seed:\n\n```js\nfaker.seed(123);\n\nvar firstRandom = faker.random.number();\n\n// Setting the seed again resets the sequence.\nfaker.seed(123);\n\nvar secondRandom = faker.random.number();\n\nconsole.log(firstRandom === secondRandom);\n```\n\n## Tests\n\n    npm install .\n    make test\n\nYou can view a code coverage report generated in coverage/lcov-report/index.html.\n\n## Projects Built with faker.js\n\n### Fake JSON Schema\n\nUse faker generators to populate JSON Schema samples.\nSee: https://github.com/pateketrueke/json-schema-faker/\n\n### CLI\n\nRun faker generators from Command Line.\nSee: https://github.com/lestoni/faker-cli\n\n**Want to see your project added here? Let us know!**\n\n### Meteor\n\n#### Meteor Installation\n\n```\nmeteor add practicalmeteor:faker\n```\n\n#### Meteor Usage, both client and server\n\n```js\nvar randomName = faker.name.findName(); // Rowan Nikolaus\nvar randomEmail = faker.internet.email(); // Kassandra.Haley@erich.biz\nvar randomCard = faker.helpers.createCard(); // random contact card containing many properties\n```\n\n## Building faker.js\n\nfaker uses [gulp](http://gulpjs.com/) to automate it's build process. Running the following build command will generate new browser builds, documentation, and code examples for the project.\n\n```\nnpm run-script build\n```\n\n## Building JSDocs\n\n```\nnpm run-script doc\n```\n\n## Version Release Schedule\n\nfaker.js is a popular project used by many organizations and individuals in production settings. Major and Minor version releases are generally on a monthly schedule. Bugs fixes are addressed by severity and fixed as soon as possible.\n\nIf you require the absolute latest version of `faker.js` the `master` branch @ http://github.com/marak/faker.js/ should always be up to date and working.\n\n## Maintainer\n\n#### Marak Squires\n\nfaker.js - Copyright (c) 2017\nMarak Squires\nhttp://github.com/marak/faker.js/\n\nfaker.js was inspired by and has used data definitions from:\n\n * https://github.com/stympy/faker/ - Copyright (c) 2007-2010 Benjamin Curtis\n * http://search.cpan.org/~jasonk/Data-Faker-0.07/ - Copyright 2004-2005 by Jason Kohles\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/Marak/Faker.js.git"
  },
  "scripts": {
    "build": "cd build && ../node_modules/.bin/gulp && cd ../",
    "doc": "jsdoc -c conf.json -t ./node_modules/ink-docstrap/template -R README.md lib",
    "lint": "jshint ./lib --config ./.jshintrc",
    "test": "mocha test/*.*.js"
  },
  "version": "4.1.0"
}
